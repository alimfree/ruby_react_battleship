q
subject.lose?
subject.fleet.all.length
subject.fleet.all.select { |ship| ship.sunk? }.length
subject.fleet.all.select { |ship| ship.sunk? }
subject.fleet.all.select { |ship| ship.sunk ?}
subject.fleet.all.select { |ship| ship.sunk }
subject.fleet
subject
continue
quit
ship.add(ship, board)
board
ship.location
expected_board
quit
subject.coordinates[:y] > Board.new.width-1
subject.coordinates[:y] Board.new.width-1
coordinates[:y]
coordinates[:y] > board.width-1
subject
q
subject.size
subject
quit
continue
board.length
quit
continue
q
health
self
ls
continue
self
continue
self
quit
qui
ship
q
continue
q
ship
ship.hit
q
ship.health
ship
q
self.health
type
health
quit
orientation
self.type
self.health
self.size
type
size
health
size
q
ship.hit
ship
ship.hit
quit
ship.hit
ship
continue
quit
ship.hit
ship.size
ship
continue
board
q
continue
orientation
quit
self.orientation
orientation
continue
quit
board.state[8][0]
board.state[7][0]
board.state[6][0]
board.state[5][0]
board.state[4][0]
board
quit
player.place_ship options
options
player.board
board
quit
player.fleet.carrier.orientation
player.fleet.carrier
board
q
y
q
board
q
board.state
q
continue
quit
opponent.class
opponent.fleet.carrier.coordinates
opponent
q
qy
w
quit
boa
q
boa
board
a
s
b
self.b
b
continue
quit
self.orientation
board
orientation
continue
opponent
quit
opponent
opponents
quit
opponent
quit
opponent
